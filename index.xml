<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rsquared Academy Blog</title>
    <link>/index.xml</link>
    <description>Recent content on Rsquared Academy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2014-2017. All rights reserved.</copyright>
    <lastBuildDate>Tue, 18 Jul 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Data Wrangling with dbplyr</title>
      <link>/post/data-wrangling-with-dbplyr/</link>
      <pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/data-wrangling-with-dbplyr/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;

</description>
    </item>
    
    <item>
      <title>SQL for Data Science</title>
      <link>/post/sql-for-data-science/</link>
      <pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/sql-for-data-science/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;

</description>
    </item>
    
    <item>
      <title>A Complete Guide to Importing Data into R - Part 2</title>
      <link>/post/a-complete-guide-to-importing-data-into-r-part-2/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/a-complete-guide-to-importing-data-into-r-part-2/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;div id=&#34;json&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;JSON&lt;/h2&gt;
&lt;p&gt;A lot of API data is available in the JSON format. You can use the &lt;a href=&#34;https://cran.r-project.org/package=jsonlite&#34;&gt;jsonlite&lt;/a&gt; package to import JSON data into R.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# jsonlite::fromJSON()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;xml&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;XML&lt;/h2&gt;
&lt;p&gt;Some APIs offer data in the XML format. Use the &lt;a href=&#34;https://cran.r-project.org/package=xml2&#34;&gt;xml2&lt;/a&gt; package to import XML data into R.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# x &amp;lt;- read_xml(&amp;#39;sample_xml&amp;#39;)

# xml_name(x)
# xml_text(x)
# xml_attrs(x)
# xml_children(x)
# baz &amp;lt;- xml2::xml_find_all(x, &amp;#39;.//book&amp;#39;)
# xml_path(baz)
# xml_attr(baz, &amp;quot;id&amp;quot;)
# xml_structure(x)
# as_list(x)
# 
# library(XML)
# xmlToDataFrame(x, c(&amp;quot;character&amp;quot;, &amp;quot;character&amp;quot;, &amp;quot;character&amp;quot;, &amp;quot;numeric&amp;quot;, 
#                     &amp;quot;character&amp;quot;, &amp;quot;character&amp;quot;))
# 
# cd &amp;lt;- read_xml(&amp;quot;http://www.xmlfiles.com/examples/cd_catalog.xml&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;html&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;HTML&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# xml2::read_html()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;google-sheets&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Google Sheets&lt;/h2&gt;
&lt;p&gt;You can import data from Google Sheets using the &lt;a href=&#34;&#34;&gt;googlesheets&lt;/a&gt; pacakge.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# mysheets &amp;lt;- gs_ls()
# mysheets %&amp;gt;% glimpse()
# 
# # practice sheets
# gs_gap() %&amp;gt;%
#     gs_copy(to = &amp;quot;Gapminder&amp;quot;)
# gs_ls(&amp;#39;Gapminder&amp;#39;)
# 
# # register sheet
# gap &amp;lt;- gs_title(&amp;#39;Gapminder&amp;#39;)
# gap
# 
# # get worksheet names
# gs_ws_ls(gap)
# 
# # read data in one worksheet
# oceania &amp;lt;- gap %&amp;gt;%
#     gs_read(ws = &amp;quot;Oceania&amp;quot;)
# 
# # read certain cells
# gap %&amp;gt;% gs_read(ws = 2, range = &amp;quot;A1:D8&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A Complete Guide to Importing Data into R - Part 3</title>
      <link>/post/a-complete-guide-to-importing-data-into-r-part-3/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/a-complete-guide-to-importing-data-into-r-part-3/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;
&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/tXSoThF.png&#34; alt=&#34;Twitter&#34; /&gt; &lt;img src=&#34;http://i.imgur.com/P3YfQoD.png&#34; alt=&#34;Facebook&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;twitter.png&#34; alt=&#34;Try Image&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Try Image&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;files&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Files&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# readr::read_file()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;lines&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Lines&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# readr::read_lines()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Blogs</title>
      <link>/post/blogs/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/blogs/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;

</description>
    </item>
    
    <item>
      <title>Books</title>
      <link>/post/books/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/books/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;

</description>
    </item>
    
    <item>
      <title>Package Website</title>
      <link>/post/package-website/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/package-website/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;

</description>
    </item>
    
    <item>
      <title>Presentations</title>
      <link>/post/presentations/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/presentations/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;

</description>
    </item>
    
    <item>
      <title>Websites</title>
      <link>/post/websites/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/websites/</guid>
      <description>&lt;!-- BLOGDOWN-HEAD --&gt;
&lt;!-- /BLOGDOWN-HEAD --&gt;

&lt;!-- BLOGDOWN-BODY-BEFORE --&gt;
&lt;!-- /BLOGDOWN-BODY-BEFORE --&gt;

</description>
    </item>
    
    <item>
      <title>Guides - Axes</title>
      <link>/post/guides-axes/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/guides-axes/</guid>
      <description>&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Now that we have learnt to build different plots, let us look at different ways to modify the axis. Along the way, we will also explore the &lt;code&gt;scale_*()&lt;/code&gt; family of functions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_x_continuous()&lt;/code&gt;: modify x axis when x is continuous&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first function we will explore is &lt;code&gt;scale_x_continuous()&lt;/code&gt;. It can be used for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;axis title&lt;/li&gt;
&lt;li&gt;axis labels&lt;/li&gt;
&lt;li&gt;axis limits&lt;/li&gt;
&lt;li&gt;axis breaks&lt;/li&gt;
&lt;li&gt;and axis position&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let us create a simple scatter plot and then use &lt;code&gt;scale_x_continuous()&lt;/code&gt; to modify the X axis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-axes_files/figure-html/guide2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  scale_x_continuous(name = &amp;quot;Displacement&amp;quot;,
                     limits = c(0, 600),
                     breaks = c(0, 150, 300, 450, 600),
                     labels = c(&amp;#39;0&amp;#39;, &amp;#39;150&amp;#39;, &amp;#39;300&amp;#39;, &amp;#39;450&amp;#39;, &amp;#39;600&amp;#39;),
                     position = &amp;#39;top&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-axes_files/figure-html/guide3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_y_continuous()&lt;/code&gt;: modify y axis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now let us modify the Y axis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  scale_y_continuous(name = &amp;quot;Miles Per Gallon&amp;quot;,
                     limits = c(0, 45),
                     breaks = c(0, 15, 30, 45),
                     labels = c(&amp;#39;0&amp;#39;, &amp;#39;15&amp;#39;, &amp;#39;30&amp;#39;, &amp;#39;45&amp;#39;),
                     position = &amp;#39;right&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-axes_files/figure-html/guide4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now let us look at plots with discrete X axis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_bar(aes(factor(cyl)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-axes_files/figure-html/guide5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;scael_x_discrete()&lt;/code&gt; to modify the X axis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_bar(aes(factor(cyl))) +
  scale_x_discrete(name = &amp;quot;Number of Cylinders&amp;quot;,
                   labels = c(&amp;quot;4&amp;quot; = &amp;quot;Four&amp;quot;, &amp;quot;6&amp;quot; = &amp;quot;Six&amp;quot;, &amp;quot;8&amp;quot; = &amp;quot;Eight&amp;quot;),
                   breaks = c(&amp;quot;4&amp;quot;, &amp;quot;6&amp;quot;, &amp;quot;8&amp;quot;),
                   position = &amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-axes_files/figure-html/guide6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;In this post, we learnt how to modify the axis whether it represents a continuous variable or a discrete variable. In the next post, we will learn how to modify the legend when aesthetics are mapped to variables.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Guides - Legends</title>
      <link>/post/guides-legends/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/guides-legends/</guid>
      <description>&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This is the 13th post in the series &lt;strong&gt;Elegant Data Visualization with ggplot2&lt;/strong&gt;. In the previos &lt;a href=&#34;https://rsquaredacademy.github.io/blog/post/guides-axes/&#34;&gt;post&lt;/a&gt;, we learnt how to modify the axis of plots. In this post, we will focus on modifying the legends of plots when the aesthetics are mapped to variables.&lt;/p&gt;
&lt;p&gt;Now that we have learnt to build different plots, let us look at different ways to modify the axis. Along the way, we will also explore the below functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_*()&lt;/code&gt; family of functions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;guides()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;guide_legend()&lt;/code&gt; and &lt;code&gt;guide_colorbar()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let us start with &lt;code&gt;scale_*()&lt;/code&gt; family of functions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_alpha_continuous()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have mapped alpha to a continuous variable, use &lt;code&gt;scale_alpha_continuous()&lt;/code&gt; to modify it. Let us create a simple scatter plot and map alpha to a continuous variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, alpha = hp), color = &amp;#39;blue&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, alpha = hp), color = &amp;#39;blue&amp;#39;) +
  scale_alpha_continuous(&amp;quot;Horsepower&amp;quot;,
                         breaks = c(0, 100, 200, 300, 400),
                         limits = c(0, 400),
                         labels = c(&amp;quot;Zero&amp;quot;, &amp;quot;Hundred&amp;quot;, &amp;quot;2 Hundred&amp;quot;, 
                                    &amp;quot;3 Hundred&amp;quot;, &amp;quot;4 Hundred&amp;quot;),
                         range = c(0.4, 0.8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_alpha_discrete()&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have mapped alpha to a discrete variable, use &lt;code&gt;scale_alpha_discrete()&lt;/code&gt; to modify it. Let us create a simple scatter plot and map alpha to a discrete variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, alpha = factor(cyl)), color = &amp;#39;blue&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, alpha = factor(cyl)), color = &amp;#39;blue&amp;#39;) +
  scale_alpha_discrete(name = &amp;quot;Cylinders&amp;quot;,
                       breaks = c(&amp;quot;4&amp;quot;, &amp;quot;6&amp;quot;, &amp;quot;8&amp;quot;),
                       labels = c(&amp;quot;Four&amp;quot;, &amp;quot;Six&amp;quot;, &amp;quot;Eight&amp;quot;),
                       range = c(0.4, 0.8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_color_manual()&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have mapped color to a discrete variable, use &lt;code&gt;scale_color_manual()&lt;/code&gt; to modify it. Let us create a simple scatter plot and map color to a discrete variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, color = factor(cyl)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, color = factor(cyl))) +
  scale_color_manual(name = &amp;quot;Cylinders&amp;quot;,
                     values = c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;, &amp;quot;green&amp;quot;),
                     labels = c(&amp;#39;Four&amp;#39;, &amp;#39;Six&amp;#39;, &amp;#39;Eight&amp;#39;),
                     limits = c(4, 6, 8),
                     breaks = c(4, 6, 8),
                     guide = &amp;quot;legend&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_fill_manual()&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have mapped fill to a discrete variable, use &lt;code&gt;scale_fill_manual()&lt;/code&gt; to modify it. Let us create a simple scatter plot and map fill to a discrete variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, fill = factor(cyl)), shape = 22)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, fill = factor(cyl)), shape = 22) +
  scale_fill_manual(name = &amp;quot;Cylinders&amp;quot;,
                     values = c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;, &amp;quot;green&amp;quot;),
                     labels = c(&amp;#39;Four&amp;#39;, &amp;#39;Six&amp;#39;, &amp;#39;Eight&amp;#39;),
                     limits = c(4, 6, 8),
                     breaks = c(4, 6, 8),
                     guide = &amp;quot;legend&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_shape_manual()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have mapped shape to a discrete variable, use &lt;code&gt;scale_shape_manual()&lt;/code&gt; to modify it. Let us create a simple scatter plot and map shape to a discrete variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, shape = factor(cyl)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, shape = factor(cyl))) +
  scale_shape_manual(name = &amp;quot;Cylinders&amp;quot;,
                    values = c(4, 12, 24),
                    labels = c(&amp;#39;Four&amp;#39;, &amp;#39;Six&amp;#39;, &amp;#39;Eight&amp;#39;),
                    limits = c(4, 6, 8),
                    breaks = c(4, 6, 8),
                    guide = &amp;quot;legend&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_size_manual()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have mapped size to a discrete variable, use &lt;code&gt;scale_size_manual()&lt;/code&gt; to modify it. Let us create a simple scatter plot and map size to a discrete variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, size = hp))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, size = hp)) +
  scale_size_continuous(name = &amp;quot;Horsepower&amp;quot;,
                        range = c(3, 6),
                        limits = c(0, 400),
                        breaks = c(100, 200, 300, 400),
                        labels = c(&amp;quot;Hundred&amp;quot;, &amp;quot;2 Hundred&amp;quot;,
                                   &amp;quot;3 Hundred&amp;quot;, &amp;quot;4 Hundred&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_alpha_manual()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have mapped alpha to a discrete variable, use &lt;code&gt;scale_alpha_manual()&lt;/code&gt; to modify it. Let us create a simple scatter plot and map alpha to a discrete variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, alpha = factor(cyl)), color = &amp;#39;blue&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, alpha = factor(cyl)), color = &amp;#39;blue&amp;#39;) +
  scale_alpha_manual(name = &amp;quot;Cylinders&amp;quot;,
                     values = c(0.4, 0.6, 0.8),
                     labels = c(&amp;#39;Four&amp;#39;, &amp;#39;Six&amp;#39;, &amp;#39;Eight&amp;#39;),
                     limits = c(4, 6, 8),
                     breaks = c(4, 6, 8),
                     guide = &amp;quot;legend&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_shape()&lt;/code&gt;: maps discrete variable to six shapes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have mapped shape to a discrete variable, use &lt;code&gt;scale_shape()&lt;/code&gt; to modify it. Let us create a simple scatter plot and map shape to a discrete variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, shape = factor(cyl))) +
  scale_shape()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, shape = factor(cyl))) +
  scale_shape(solid = FALSE,
              name = &amp;#39;Cylinders&amp;#39;,
              labels = c(&amp;#39;Four&amp;#39;, &amp;#39;Six&amp;#39;, &amp;#39;Eight&amp;#39;),
              limits = c(4, 6, 8),
              breaks = c(4, 6, 8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_size()&lt;/code&gt;: maps discrete variable to six sizes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have mapped size to a discrete variable, use &lt;code&gt;scale_size()&lt;/code&gt; to modify it. Let us create a simple scatter plot and map size to a discrete variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, size = hp))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, size = hp)) +
  scale_size(name = &amp;quot;Horsepower&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg19-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;guides&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Guides&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, color = factor(cyl))) +
  scale_color_manual(values = c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;, &amp;quot;green&amp;quot;),
                      guide = guide_legend(
                       title = &amp;quot;Cylinders&amp;quot;,
                       title.hjust = 0.5,
                       title.position = &amp;quot;top&amp;quot;,
                       label.position = &amp;quot;right&amp;quot;,
                       direction = &amp;quot;horizontal&amp;quot;,
                       label.hjust = 0.5,
                       nrow = 2,
                       reverse = TRUE
                      )
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg20-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, color = factor(cyl))) +
  scale_color_discrete(guide = guide_legend(
                        title = &amp;quot;Cylinders&amp;quot;,
                        title.hjust = 0.5,
                        title.position = &amp;quot;top&amp;quot;,
                        label.position = &amp;quot;right&amp;quot;,
                        direction = &amp;quot;horizontal&amp;quot;,
                        label.hjust = 0.5,
                        nrow = 2,
                        reverse = TRUE
                        )
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg21-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, color = hp)) +
  scale_color_continuous(guide = guide_colorbar(
    title = &amp;quot;Horsepower&amp;quot;,
    title.position = &amp;quot;top&amp;quot;,
    title.vjust = 1,
    label.position = &amp;quot;bottom&amp;quot;,
    label.vjust = 0.8,
    barwidth = 10,
    barheight = 3,
    nbins = 10,
    raster = FALSE,
    ticks = TRUE,
    draw.ulim = TRUE,
    draw.llim = FALSE,
    direction = &amp;quot;horizontal&amp;quot;,
    reverse = TRUE
  ))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg22-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, fill = hp), shape = 22) +
  scale_fill_continuous(guide = guide_colorbar(
    title = &amp;quot;Horsepower&amp;quot;,
    title.position = &amp;quot;top&amp;quot;,
    title.vjust = 1,
    label.position = &amp;quot;bottom&amp;quot;,
    label.vjust = 0.8,
    barwidth = 10,
    barheight = 3,
    nbins = 10,
    raster = FALSE,
    ticks = TRUE,
    draw.ulim = TRUE,
    draw.llim = FALSE,
    direction = &amp;quot;horizontal&amp;quot;,
    reverse = TRUE)
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg23-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, fill = hp), shape = 22) +
  scale_fill_gradient2(guide = guide_colorbar(
    title = &amp;quot;Horsepower&amp;quot;,
    title.position = &amp;quot;top&amp;quot;,
    title.vjust = 1,
    label.position = &amp;quot;bottom&amp;quot;,
    label.vjust = 0.8,
    barwidth = 10,
    barheight = 3,
    nbins = 10,
    raster = FALSE,
    ticks = TRUE,
    draw.ulim = TRUE,
    draw.llim = FALSE,
    direction = &amp;quot;horizontal&amp;quot;,
    reverse = TRUE)
  ) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg24-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, fill = hp), shape = 22) +
  scale_fill_gradient(low = &amp;quot;white&amp;quot;, high = &amp;quot;black&amp;quot;, 
    guide = guide_colorbar(
      title = &amp;quot;Horsepower&amp;quot;,
      title.position = &amp;quot;top&amp;quot;,
      title.vjust = 1,
      label.position = &amp;quot;bottom&amp;quot;,
      label.vjust = 0.8,
      barwidth = 10,
      barheight = 3,
      nbins = 10,
      raster = FALSE,
      ticks = TRUE,
      draw.ulim = TRUE,
      draw.llim = FALSE,
      direction = &amp;quot;horizontal&amp;quot;,
      reverse = TRUE
    )
  ) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg25-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, fill = hp), shape = 22) +
  scale_fill_gradientn(colors = terrain.colors(5), 
    guide = guide_colorbar(
      title = &amp;quot;Horsepower&amp;quot;,
      title.position = &amp;quot;top&amp;quot;,
      title.vjust = 1,
      label.position = &amp;quot;bottom&amp;quot;,
      label.vjust = 0.8,
      barwidth = 10,
      barheight = 3,
      nbins = 10,
      raster = FALSE,
      ticks = TRUE,
      draw.ulim = TRUE,
      draw.llim = FALSE,
      direction = &amp;quot;horizontal&amp;quot;,
      reverse = TRUE
    )
  ) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg26-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, color = hp, 
                 size = qsec, 
                 shape = factor(gear))) + 
  guides(color = &amp;quot;colorbar&amp;quot;,
         shape = &amp;quot;legend&amp;quot;,
         size = &amp;quot;legend&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg27-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, color = hp, 
                 size = wt, 
                 shape = factor(gear))) + 
  guides(
    color = guide_colorbar(
      title = &amp;quot;Horsepower&amp;quot;
    ),
    shape = guide_legend(
      title = &amp;quot;Weight&amp;quot;
    ),
    size = guide_legend(
      title = &amp;quot;Gear&amp;quot;
    )
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends_files/figure-html/leg28-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Guides: Legends - Part 2</title>
      <link>/post/guides-legends-part-2/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/guides-legends-part-2/</guid>
      <description>&lt;p&gt;This is the 14th post in the series &lt;strong&gt;Elegant Data Visualization with ggplot2&lt;/strong&gt;. In the previos &lt;a href=&#34;https://rsquaredacademy.github.io/blog/post/guides-legends/&#34;&gt;post&lt;/a&gt;, we learnt how to modify the legend of plots when aesthetics are mapped to variables. In this post, we will continue to explore different ways to modify/customize the legend of plots.&lt;/p&gt;
&lt;div id=&#34;guides&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Guides&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, color = factor(cyl))) +
  scale_color_manual(values = c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;, &amp;quot;green&amp;quot;),
                      guide = guide_legend(
                       title = &amp;quot;Cylinders&amp;quot;,
                       title.hjust = 0.5,
                       title.position = &amp;quot;top&amp;quot;,
                       label.position = &amp;quot;right&amp;quot;,
                       direction = &amp;quot;horizontal&amp;quot;,
                       label.hjust = 0.5,
                       nrow = 2,
                       reverse = TRUE
                      )
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends-part-2_files/figure-html/gui2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, color = factor(cyl))) +
  scale_color_discrete(guide = guide_legend(
                        title = &amp;quot;Cylinders&amp;quot;,
                        title.hjust = 0.5,
                        title.position = &amp;quot;top&amp;quot;,
                        label.position = &amp;quot;right&amp;quot;,
                        direction = &amp;quot;horizontal&amp;quot;,
                        label.hjust = 0.5,
                        nrow = 2,
                        reverse = TRUE
                        )
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends-part-2_files/figure-html/gui3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, color = hp)) +
  scale_color_continuous(guide = guide_colorbar(
    title = &amp;quot;Horsepower&amp;quot;,
    title.position = &amp;quot;top&amp;quot;,
    title.vjust = 1,
    label.position = &amp;quot;bottom&amp;quot;,
    label.vjust = 0.8,
    barwidth = 10,
    barheight = 3,
    nbins = 10,
    raster = FALSE,
    ticks = TRUE,
    draw.ulim = TRUE,
    draw.llim = FALSE,
    direction = &amp;quot;horizontal&amp;quot;,
    reverse = TRUE
  ))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends-part-2_files/figure-html/gui4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, fill = hp), shape = 22) +
  scale_fill_continuous(guide = guide_colorbar(
    title = &amp;quot;Horsepower&amp;quot;,
    title.position = &amp;quot;top&amp;quot;,
    title.vjust = 1,
    label.position = &amp;quot;bottom&amp;quot;,
    label.vjust = 0.8,
    barwidth = 10,
    barheight = 3,
    nbins = 10,
    raster = FALSE,
    ticks = TRUE,
    draw.ulim = TRUE,
    draw.llim = FALSE,
    direction = &amp;quot;horizontal&amp;quot;,
    reverse = TRUE)
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends-part-2_files/figure-html/gui5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, fill = hp), shape = 22) +
  scale_fill_gradient2(guide = guide_colorbar(
    title = &amp;quot;Horsepower&amp;quot;,
    title.position = &amp;quot;top&amp;quot;,
    title.vjust = 1,
    label.position = &amp;quot;bottom&amp;quot;,
    label.vjust = 0.8,
    barwidth = 10,
    barheight = 3,
    nbins = 10,
    raster = FALSE,
    ticks = TRUE,
    draw.ulim = TRUE,
    draw.llim = FALSE,
    direction = &amp;quot;horizontal&amp;quot;,
    reverse = TRUE)
  ) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends-part-2_files/figure-html/gui6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, fill = hp), shape = 22) +
  scale_fill_gradient(low = &amp;quot;white&amp;quot;, high = &amp;quot;black&amp;quot;, 
    guide = guide_colorbar(
      title = &amp;quot;Horsepower&amp;quot;,
      title.position = &amp;quot;top&amp;quot;,
      title.vjust = 1,
      label.position = &amp;quot;bottom&amp;quot;,
      label.vjust = 0.8,
      barwidth = 10,
      barheight = 3,
      nbins = 10,
      raster = FALSE,
      ticks = TRUE,
      draw.ulim = TRUE,
      draw.llim = FALSE,
      direction = &amp;quot;horizontal&amp;quot;,
      reverse = TRUE
    )
  ) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends-part-2_files/figure-html/gui7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, fill = hp), shape = 22) +
  scale_fill_gradientn(colors = terrain.colors(5), 
    guide = guide_colorbar(
      title = &amp;quot;Horsepower&amp;quot;,
      title.position = &amp;quot;top&amp;quot;,
      title.vjust = 1,
      label.position = &amp;quot;bottom&amp;quot;,
      label.vjust = 0.8,
      barwidth = 10,
      barheight = 3,
      nbins = 10,
      raster = FALSE,
      ticks = TRUE,
      draw.ulim = TRUE,
      draw.llim = FALSE,
      direction = &amp;quot;horizontal&amp;quot;,
      reverse = TRUE
    )
  ) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends-part-2_files/figure-html/gui8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, color = hp, 
                 size = qsec, 
                 shape = factor(gear))) + 
  guides(color = &amp;quot;colorbar&amp;quot;,
         shape = &amp;quot;legend&amp;quot;,
         size = &amp;quot;legend&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends-part-2_files/figure-html/gui9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg, color = hp, 
                 size = wt, 
                 shape = factor(gear))) + 
  guides(
    color = guide_colorbar(
      title = &amp;quot;Horsepower&amp;quot;
    ),
    shape = guide_legend(
      title = &amp;quot;Weight&amp;quot;
    ),
    size = guide_legend(
      title = &amp;quot;Gear&amp;quot;
    )
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-guides-legends-part-2_files/figure-html/gui10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Overlapping</title>
      <link>/post/overlapping/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/overlapping/</guid>
      <description>&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This is the 18th post in the series &lt;strong&gt;Elegant Data Visualization with ggplot2&lt;/strong&gt;. In the previous &lt;a href=&#34;https://rsquaredacademy.github.io/blog/post/guides-legends-part-2/&#34;&gt;post&lt;/a&gt;, we learnt how to modify the legend of plots when aesthetics are mapped to variables. In this post, we will learn to position the geoms to avoid overlapping.&lt;/p&gt;
&lt;div id=&#34;dodge&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dodge&lt;/h2&gt;
&lt;p&gt;Preserve the vertical position while adjusting the horizontal position.&lt;/p&gt;
&lt;p&gt;Create grouped bar plots.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mtcars, aes(factor(cyl), fill = factor(vs))) +
  geom_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-overlapping_files/figure-html/pos2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mtcars, aes(factor(cyl), fill = factor(vs))) +
  geom_bar(position = position_dodge(width = 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-overlapping_files/figure-html/pos3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;jitter&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Jitter&lt;/h2&gt;
&lt;p&gt;Add some noise to data points for better visualization.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mtcars, aes(am, vs)) +
  geom_jitter()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-overlapping_files/figure-html/pos4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mtcars, aes(factor(am), factor(vs))) +
  geom_jitter()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-overlapping_files/figure-html/pos5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mtcars, aes(factor(am), factor(vs))) +
  geom_jitter(position = position_jitter(width = 0.1, height = 0.1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-overlapping_files/figure-html/pos6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mtcars, aes(factor(am), factor(vs))) +
  geom_jitter(position = position_jitter(width = 0.05, height = 0.3))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-overlapping_files/figure-html/pos7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mtcars, aes(am, vs)) +
  geom_jitter(position = position_jitter(width = 0.1, height = 0.1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-overlapping_files/figure-html/pos8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;nudge&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Nudge&lt;/h2&gt;
&lt;p&gt;Use with geom_text. Useful for adjusting text around points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(
  x = c(1,3,2,5),
  y = c(&amp;quot;a&amp;quot;,&amp;quot;c&amp;quot;,&amp;quot;d&amp;quot;,&amp;quot;c&amp;quot;)
)

ggplot(df, aes(x, y)) +
  geom_point() +
  geom_text(aes(label = y),
            position = position_nudge(y = -0.1, x = -0.2))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-overlapping_files/figure-html/pos9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;fill&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Fill&lt;/h2&gt;
&lt;p&gt;Proportional bar plots.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mtcars, aes(factor(cyl), fill = factor(gear))) +
  geom_bar(position = &amp;quot;fill&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-overlapping_files/figure-html/pos10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;stack&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Stack&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;series &amp;lt;- data.frame(
  time = c(rep(1, 4),rep(2, 4), rep(3, 4), rep(4, 4)),
  type = rep(c(&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;d&amp;#39;), 4),
  value = rpois(16, 10)
)

series$type2 &amp;lt;- factor(series$type, levels = c(&amp;#39;c&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;a&amp;#39;))

ggplot(series, aes(time, value, group = type)) +
  geom_line(aes(colour = type)) +
  geom_point(aes(colour = type))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-overlapping_files/figure-html/pos11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(series, aes(time, value, group = type)) +
  geom_line(aes(colour = type), position = &amp;quot;stack&amp;quot;) +
  geom_point(aes(colour = type), position = &amp;quot;stack&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-06-overlapping_files/figure-html/pos11-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Axis &amp; Plot Labels</title>
      <link>/post/axis-plot-labels/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/axis-plot-labels/</guid>
      <description>&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This is the fifth post in the series &lt;strong&gt;Elegant Data Visualization with ggplot2&lt;/strong&gt;. In the previous &lt;a href=&#34;https://rsquaredacademy.github.io/blog/post/ggplot2-introduction-to-aesthetics/&#34;&gt;post&lt;/a&gt;, we learnt about aesthetics. In this post, we will learn to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add title and subtitle to the plot&lt;/li&gt;
&lt;li&gt;modify axis labels&lt;/li&gt;
&lt;li&gt;modify axis range&lt;/li&gt;
&lt;li&gt;remove axis&lt;/li&gt;
&lt;li&gt;format axis&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;basic-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Basic Plot&lt;/h2&gt;
&lt;p&gt;Let us start by building a simple scatter plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-04-axis-plot-labels_files/figure-html/axis2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;title-subtitle&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Title &amp;amp; Subtitle&lt;/h2&gt;
&lt;p&gt;You can add a title and subtitle to the plot using the &lt;code&gt;ggtitle()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  ggtitle(label = &amp;#39;Displacement vs Mileage&amp;#39;, subtitle = &amp;#39;disp vs mpg&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-04-axis-plot-labels_files/figure-html/axis3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;axis-labels&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Axis Labels&lt;/h2&gt;
&lt;p&gt;The axis labels can be modified using the &lt;code&gt;xlab()&lt;/code&gt; and &lt;code&gt;ylab()&lt;/code&gt; functions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  xlab(&amp;#39;Displacement&amp;#39;) + ylab(&amp;#39;Miles Per Gallon&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-04-axis-plot-labels_files/figure-html/axis4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can add all of the above using the &lt;code&gt;labs()&lt;/code&gt; function as well.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  labs(title = &amp;#39;Displacement vs Mileage&amp;#39;,
    subtitle = &amp;#39;disp vs mpg&amp;#39;, x = &amp;#39;Displacement&amp;#39;,
    y = &amp;#39;Miles Per Gallon&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-04-axis-plot-labels_files/figure-html/axis5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;axis-range&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Axis Range&lt;/h2&gt;
&lt;p&gt;Sometimes you may want to modify the range of the axis.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;xlim()&lt;/code&gt; function to modify the range of the X axis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  xlim(c(0, 600))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-04-axis-plot-labels_files/figure-html/axis6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;ylim()&lt;/code&gt; function to modify the range of the Y axis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  ylim(c(0, 40))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-04-axis-plot-labels_files/figure-html/axis7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can use the &lt;code&gt;expand_limits()&lt;/code&gt; function as well.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  expand_limits(x = c(0, 600), y = c(0, 40))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-04-axis-plot-labels_files/figure-html/axis8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;remove-axis-labels&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Remove Axis Labels&lt;/h2&gt;
&lt;p&gt;If you want to remove the axis labels all together, use the &lt;code&gt;theme()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  theme(axis.title.x = element_blank(),
    axis.title.y = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-04-axis-plot-labels_files/figure-html/axis9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;What we are doing above is to modify the theme of the plot and set the axis labels to blank using &lt;code&gt;element_blank()&lt;/code&gt; function.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;format-title-axis-labels&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Format Title &amp;amp; Axis Labels&lt;/h2&gt;
&lt;p&gt;To format the title or the axis labels, we have to modify the theme of the plot using the &lt;code&gt;theme()&lt;/code&gt; function. We can modify the color, font family, font face, font size and horizontal position. Let us try them one by one.&lt;/p&gt;
&lt;p&gt;The font family can be any of the valid font family types but it must be supported by OS. The font face can be plain, bold, italic, bold.italic hjust must be between 0 (extreme left) and 1 (extreme right).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  ggtitle(&amp;#39;Diaplacement vs Mileage&amp;#39;) +
  theme(plot.title = element_text(color = &amp;#39;blue&amp;#39;,
                                  family = &amp;#39;Arial&amp;#39;,
                                  face = &amp;#39;bold&amp;#39;,
                                  size = 8,
                                  hjust = 0.3))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-04-axis-plot-labels_files/figure-html/axis10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;X axis label.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  xlab(&amp;#39;Diaplacement&amp;#39;) +
  theme(axis.title.x = element_text(color = &amp;#39;blue&amp;#39;,
                                  family = &amp;#39;Arial&amp;#39;,
                                  face = &amp;#39;bold&amp;#39;,
                                  size = 8,
                                  hjust = 0.5,
                                  angle = 15))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x
## $y, : font family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-04-axis-plot-labels_files/figure-html/axis11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Y axis label.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(aes(disp, mpg)) +
  ylab(&amp;#39;Miles Per Gallon&amp;#39;) +
  theme(axis.title.y = element_text(color = &amp;#39;blue&amp;#39;,
                                  family = &amp;#39;Arial&amp;#39;,
                                  face = &amp;#39;italic&amp;#39;,
                                  size = 8,
                                  vjust = 0.3,
                                  angle = 90))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x
## $y, : font family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-04-axis-plot-labels_files/figure-html/axis12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Guides</title>
      <link>/post/guides/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/guides/</guid>
      <description>&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This is the sixth post in the series &lt;strong&gt;Elegant Data Visualization with ggplot2&lt;/strong&gt;. In the previous &lt;a href=&#34;https://rsquaredacademy.github.io/blog/post/ggplot2-text-annotations/&#34;&gt;post&lt;/a&gt;, we learnt how to add text to a plot. In this post, we will learn how to modify guide/legend.&lt;/p&gt;
&lt;div id=&#34;guide&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Guide&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_bar(aes(factor(cyl), fill = factor(gear))) +
  scale_fill_discrete(guide = guide_legend(
    title = &amp;#39;gear&amp;#39;, title.position = &amp;#39;bottom&amp;#39;, title.hjust = 0.5,
    label.position = &amp;#39;top&amp;#39;, direction = &amp;#39;horizontal&amp;#39;, 
    label.hjust = 0.5, nrow = 3, reverse = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./post/2017-07-04-guides_files/figure-html/guides2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>