<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dplyr on Rsquared Academy Blog</title>
    <link>/tags/dplyr/</link>
    <description>Recent content in Dplyr on Rsquared Academy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2014-2017. All rights reserved.</copyright>
    <lastBuildDate>Tue, 18 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/dplyr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Data Wrangling with dbplyr</title>
      <link>/post/data-wrangling-with-dbplyr/</link>
      <pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/data-wrangling-with-dbplyr/</guid>
      <description>IntroductionThis is the third post in the series R &amp;amp; Databases. You can find the links to the other two posts of this series below:
Quick Guide: R &amp;amp; SQLiteSQL for Data ScienceIn this post, we will learn to query data from a database using dplyr.

Libraries, Code &amp;amp; DataWe will use the following libraries in this post:</description>
    </item>
    
    <item>
      <title>Data Wrangling with dplyr - Part 3</title>
      <link>/post/data-manipulation-in-r-with-dplyr-part-3/</link>
      <pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/data-manipulation-in-r-with-dplyr-part-3/</guid>
      <description>IntroductionThis is the ninth post in the series Data Wrangling with R. In the previous post, we learnt how to combine tables using the *_join() family of functions in dplyr.
In this post, we will explore a set of helper functions in order to:
extract unique rowsrename columnssample dataextract columnsslice rowsarrange rowscompare tablesextract/mutate data using predicate functionscount observations for different levels of a variable</description>
    </item>
    
    <item>
      <title>Data Wrangling with dplyr - Part 2</title>
      <link>/post/data-manipulation-in-r-with-dplyr-part-2/</link>
      <pubDate>Mon, 22 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/data-manipulation-in-r-with-dplyr-part-2/</guid>
      <description>IntroductionThis is the eighth post in the series Data Wrangling with R. In a previous post, we learnt about dplyr verbs and used them to compute average order value for an e-commerce website data. In this post, we will learn to combine tables using different join functions provided in dplyr. Let us assume we have 2 tables y and y. Below are the different types of join functions provided in dplyr.</description>
    </item>
    
    <item>
      <title>Data Manipulation in R with dplyr - Part 1</title>
      <link>/post/data-manipulation-in-r-with-dplyr-part-1/</link>
      <pubDate>Sat, 18 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/data-manipulation-in-r-with-dplyr-part-1/</guid>
      <description>IntroductionThis is the seventh post in the series Data Wrangling with R. In the previous post, we learnt about using pipes to make our code readable. In this post, we will learn about dplyr.
According to a survey by CrowdFlower, data scientists spend most of their time cleaning and manipulating data rather than mining or modeling them for insights. As such, it becomes important to have tools that make data manipulation faster and easier.</description>
    </item>
    
  </channel>
</rss>