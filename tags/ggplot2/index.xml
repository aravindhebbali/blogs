<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ggplot2 on Rsquared Academy Blog</title>
    <link>/tags/ggplot2/</link>
    <description>Recent content in Ggplot2 on Rsquared Academy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2014-2017. All rights reserved.</copyright>
    <lastBuildDate>Wed, 20 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/ggplot2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Legend - Part 3</title>
      <link>/post/legend-part-3/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/legend-part-3/</guid>
      <description>IntroductionIf the aesthetics are mapped to variables, ggplot2 automatically creates legends wherever applicable. You may want to modify the appearance of legends. In this module, we will learn to modify the legends when shape is mapped to categorical variables. If you have mapped shape/size to a discrete variable which has less than six categories, you can use scale_shape()
Modify legend when shape is mapped to variables. Specifically
titlebreakslimitsrangelabelsvaluessymbol typePlotggplot(mtcars) +geom_point(aes(disp, mpg, shape = factor(cyl)))</description>
    </item>
    
    <item>
      <title>Legend - Part 4</title>
      <link>/post/legend-part-4/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/legend-part-4/</guid>
      <description>IntroductionIf the aesthetics are mapped to variables, ggplot2 automatically creates legends wherever applicable. You may want to modify the appearance of legends. In this module, we will learn to modify the legends when size is mapped to categorical variables.
Modify legend when size is mapped to variables. Specifically
titlebreakslimitsrangelabelsvaluessymbol type
Plotggplot(mtcars) +geom_point(aes(disp, mpg, size = hp))</description>
    </item>
    
    <item>
      <title>Legend - Part 5</title>
      <link>/post/legend-part-5/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/legend-part-5/</guid>
      <description>IntroductionIf the aesthetics are mapped to variables, ggplot2 automatically creates legends wherever applicable. You may want to modify the appearance of legends. In this module, we will learn to modify the legends when alpha is mapped to categorical variables.
Modify legend when alpha is mapped to variables. Specifically
titlebreakslimitsrangelabelsvaluessymbol type
Plotggplot(mtcars) +geom_point(aes(disp, mpg, alpha = hp), color = &amp;#39;blue&amp;#39;)</description>
    </item>
    
    <item>
      <title>Legend - Part 6</title>
      <link>/post/legend-part-6/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/legend-part-6/</guid>
      <description>IntroductionLearn to modify legend
titlelabelbar

Titlepositiontopbottomleftrightalignment0 (left)1 (right)
Legend Titleggplot(mtcars) + geom_point(aes(disp, mpg, color = factor(cyl))) +scale_color_manual(values = c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;, &amp;quot;green&amp;quot;),guide = guide_legend(title = &amp;quot;Cylinders&amp;quot;))
Title Alignmentggplot(mtcars) + geom_point(aes(disp, mpg, color = factor(cyl))) +scale_color_manual(values = c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;, &amp;quot;green&amp;quot;),guide = guide_legend(title = &amp;quot;Cylinders&amp;quot;, title.</description>
    </item>
    
    <item>
      <title>Guides - Axes</title>
      <link>/post/guides-axes/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/guides-axes/</guid>
      <description>IntroductionNow that we have learnt to build different plots, let us look at different ways to modify the axis. Along the way, we will also explore the scale_*() family of functions.
Modify X and Y axis
titlelabelslimitsbreakspositionIn this module, we will learn how to modify the X and Y axis using the following functions:
Continuous Axisscale_x_continuous()scale_y_continuous()Discrete Axisscale_x_discrete()scale_y_discrete()</description>
    </item>
    
    <item>
      <title>Legend - Part 2</title>
      <link>/post/legend-part-2/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/legend-part-2/</guid>
      <description>IntroductionThis is the 14th post in the series Elegant Data Visualization with ggplot2. In the previos post, we learnt how to modify the legend of plots when aesthetics are mapped to variables. In this post, we will continue to explore different ways to modify/customize the legend of plots.
If the aesthetics are mapped to variables, ggplot2 automatically creates legends wherever applicable. You may want to modify the appearance of legends.</description>
    </item>
    
    <item>
      <title>Legends - Part 1</title>
      <link>/post/legend-part-1/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/legend-part-1/</guid>
      <description>IntroductionThis is the 13th post in the series Elegant Data Visualization with ggplot2. In the previos post, we learnt how to modify the axis of plots. In this post, we will focus on modifying the legends of plots when the aesthetics are mapped to variables. If the aesthetics are mapped to variables, ggplot2 automatically creates legends wherever applicable. You may want to modify the appearance of legends.</description>
    </item>
    
    <item>
      <title>Overlapping</title>
      <link>/post/overlapping/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/overlapping/</guid>
      <description>IntroductionThis is the 18th post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt how to modify the legend of plots when aesthetics are mapped to variables. In this post, we will learn to position the geoms to avoid overlapping.

DodgePreserve the vertical position while adjusting the horizontal position.
ggplot(data = mtcars, aes(factor(cyl), fill = factor(vs))) +geom_bar()</description>
    </item>
    
    <item>
      <title>Axis &amp; Plot Labels</title>
      <link>/post/axis-plot-labels/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/axis-plot-labels/</guid>
      <description>IntroductionThis is the fifth post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt about aesthetics. In this post, we will learn to:
add title and subtitle to the plotmodify axis labelsmodify axis rangeremove axisformat axis
Basic Plotggplot(mtcars) +geom_point(aes(disp, mpg))
Title &amp;amp; SubtitleThere are two ways to add title to a plot:</description>
    </item>
    
    <item>
      <title>Guides</title>
      <link>/post/guides/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/guides/</guid>
      <description> 
IntroductionThis is the sixth post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt how to add text to a plot. In this post, we will learn how to modify guide/legend.
Guideggplot(mtcars) +geom_bar(aes(factor(cyl), fill = factor(gear))) +scale_fill_discrete(guide = guide_legend(title = &amp;#39;gear&amp;#39;, title.position = &amp;#39;bottom&amp;#39;, title.hjust = 0.5,label.position = &amp;#39;top&amp;#39;, direction = &amp;#39;horizontal&amp;#39;, label.hjust = 0.5, nrow = 3, reverse = TRUE))</description>
    </item>
    
    <item>
      <title>ggplot2: Extensions</title>
      <link>/post/ggplot2-extensions/</link>
      <pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-extensions/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ggplot2: Facets (Combine multiple plots)</title>
      <link>/post/ggplot2-facets-combine-multiple-plots/</link>
      <pubDate>Fri, 08 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-facets-combine-multiple-plots/</guid>
      <description>IntroductionThis is the 13th post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt the stat_*() family of functions. In this post, we will learn about faceting i.e.Â combining plots.

Dataecom &amp;lt;- readr::read_csv(&amp;#39;https://raw.githubusercontent.com/rsquaredacademy/datasets/master/web.csv&amp;#39;)ecom## # A tibble: 1,000 x 11## id referrer device bouncers n_visit n_pages duration country## &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;## 1 1 google laptop true 10 1 693 Czech Republic## 2 2 yahoo tablet true 9 1 459 Yemen## 3 3 direct laptop true 0 1 996 Brazil## 4 4 bing tablet false 3 18 468 China## 5 5 yahoo mobile true 9 1 955 Poland## 6 6 yahoo laptop false 5 5 135 South Africa## 7 7 yahoo mobile true 10 1 75 Bangladesh## 8 8 direct mobile true 10 1 908 Indonesia## 9 9 bing mobile false 3 19 209 Netherlands## 10 10 google mobile true 6 1 208 Czech Republic## # .</description>
    </item>
    
    <item>
      <title>ggplot2: Themes</title>
      <link>/post/ggplot2-themes/</link>
      <pubDate>Sat, 25 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-themes/</guid>
      <description>IntroductionThis is the last post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt to combine multiple plots. In this post, we will learn to
modify theme componentsuse different themesUse theme() to modify the appearance of all non data components of the plot such as
axislegendpanelplot areabackgroundmarginfacets
Scatter Plotp &amp;lt;- ggplot(mtcars) +geom_point(aes(disp, mpg))p</description>
    </item>
    
    <item>
      <title>ggplot2: Text Annotations</title>
      <link>/post/ggplot2-text-annotations/</link>
      <pubDate>Fri, 10 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-text-annotations/</guid>
      <description>IntroductionThis is the sixth post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt to modify the axis and plot labels. In this post, we will learn to add text to the plots.
add custom textmodify colormodify sizemodify fontfacemodify angle
Libraries, Code &amp;amp; DataWe will use the following libraries in this post:</description>
    </item>
    
    <item>
      <title>ggplot2: Statistical Plots</title>
      <link>/post/ggplot2-statistical-plots/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-statistical-plots/</guid>
      <description>IntroductionThis is the 12th post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt to build histograms. In this post, we will explore an alternative method to build plots.
So far we have used geom_*() functions to build plots. Now we will use a new set of functions stat_*():
stat_count()stat_boxplot()stat_identity()stat_bin()stat_unique()
Dataecom &amp;lt;- readr::read_csv(&amp;#39;https://raw.</description>
    </item>
    
    <item>
      <title>ggplot2: Histogram</title>
      <link>/post/ggplot2-histogram/</link>
      <pubDate>Fri, 06 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-histogram/</guid>
      <description>IntroductionThis is the eleventh post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt to build box plots. In this post, we will learn to
build histogramspecify binsmodifycolorfillalphabin widthline typeline sizemap aesthetics to variables
Dataecom &amp;lt;- readr::read_csv(&amp;#39;https://raw.githubusercontent.com/rsquaredacademy/datasets/master/web.csv&amp;#39;)ecom## # A tibble: 1,000 x 11## id referrer device bouncers n_visit n_pages duration country## &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;## 1 1 google laptop true 10 1 693 Czech Republic## 2 2 yahoo tablet true 9 1 459 Yemen## 3 3 direct laptop true 0 1 996 Brazil## 4 4 bing tablet false 3 18 468 China## 5 5 yahoo mobile true 9 1 955 Poland## 6 6 yahoo laptop false 5 5 135 South Africa## 7 7 yahoo mobile true 10 1 75 Bangladesh## 8 8 direct mobile true 10 1 908 Indonesia## 9 9 bing mobile false 3 19 209 Netherlands## 10 10 google mobile true 6 1 208 Czech Republic## # .</description>
    </item>
    
    <item>
      <title>ggplot2: Box Plots</title>
      <link>/post/ggplot2-box-plots/</link>
      <pubDate>Thu, 21 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-box-plots/</guid>
      <description>IntroductionThis is the 9th post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt how to build line charts. In this post, we will
build box plotsmodify boxcolorfillalphaline sizeline typemodify outliercolorshapesizealpha
Dataecom &amp;lt;- readr::read_csv(&amp;#39;https://raw.githubusercontent.com/rsquaredacademy/datasets/master/web.csv&amp;#39;)ecom## # A tibble: 1,000 x 11## id referrer device bouncers n_visit n_pages duration country## &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;## 1 1 google laptop true 10 1 693 Czech Republic## 2 2 yahoo tablet true 9 1 459 Yemen## 3 3 direct laptop true 0 1 996 Brazil## 4 4 bing tablet false 3 18 468 China## 5 5 yahoo mobile true 9 1 955 Poland## 6 6 yahoo laptop false 5 5 135 South Africa## 7 7 yahoo mobile true 10 1 75 Bangladesh## 8 8 direct mobile true 10 1 908 Indonesia## 9 9 bing mobile false 3 19 209 Netherlands## 10 10 google mobile true 6 1 208 Czech Republic## # .</description>
    </item>
    
    <item>
      <title>ggplot2: Bar Plots</title>
      <link>/post/ggplot2-bar-plots/</link>
      <pubDate>Thu, 07 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-bar-plots/</guid>
      <description>IntroductionThis is the ninth post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt to build line charts. In this post, we will learn to:
buildsimple bar plotstacked bar plotgrouped bar plotproportional bar plotmap aesthetics to variablesspecify values forbar colorbar line colorbar line typebar line size</description>
    </item>
    
    <item>
      <title>ggplot2: Line Graphs</title>
      <link>/post/ggplot2-line-graphs/</link>
      <pubDate>Tue, 22 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-line-graphs/</guid>
      <description>IntroductionThis is the 8th post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt to build scatter plots. In this post, we will learn to
buildsimple line chartgrouped line chartmap aesthetics to variablesmodify linecolortypesize
Case StudyWe will use a data set related to GDP growth rate.</description>
    </item>
    
    <item>
      <title>ggplot2: Scatter Plots</title>
      <link>/post/ggplot2-scatter-plots/</link>
      <pubDate>Wed, 09 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-scatter-plots/</guid>
      <description>IntroductionThis is the fifth post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt about aesthetics. In this post, we will build scatter plots by applying everything we have learnt so far.
build scatter plotsmodify pointcolorfillalphashapesizefit regression line
Basic Plotggplot(mtcars) +geom_point(aes(disp, mpg))
Jitterggplot(mtcars) +geom_point(aes(disp, mpg), position = &amp;#39;jitter&amp;#39;)</description>
    </item>
    
    <item>
      <title>ggplot2: Introduction to aesthetics</title>
      <link>/post/ggplot2-introduction-to-aesthetics/</link>
      <pubDate>Sat, 20 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-introduction-to-aesthetics/</guid>
      <description>IntroductionThis is the fourth post in the series Elegant Data Visualization with ggplot2. In the previous post we learnt about geoms and how we can use them to build different plots. In this post, we will focus on the aesthetics i.e.Â color, shape, size, alpha, line type, line width etc. We can map these to variables or specify values for them. If we want to map the above to variables, we have to specify them within the aes() function.</description>
    </item>
    
    <item>
      <title>ggplot2: Quick Tour</title>
      <link>/post/ggplot2-quick-tour/</link>
      <pubDate>Fri, 19 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-quick-tour/</guid>
      <description>IntroductionThis is the second post in the series Elegant Data Visualization with ggplot2. In the previous post, we understood the concept of grammar of graphics and even built a bar plot step by step while exploring the different components of a plot/chart. In this post, we will learn to quickly build a set of plots that are routinely used to explore data.

Libraries, Code &amp;amp; DataWe will use the following libraries in this post:</description>
    </item>
    
    <item>
      <title>ggplot2: Introduction to geoms</title>
      <link>/post/ggplot2-introduction-to-geoms/</link>
      <pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/ggplot2-introduction-to-geoms/</guid>
      <description>IntroductionThis is the third post in the series Elegant Data Visualization with ggplot2. In the previous post, we learnt how to create plots using the qplot() function. In this post, we will create some of the most routinely used plots to explore data using the geom_* functions.

Libraries, Code &amp;amp; DataWe will use the following libraries in this post:
readrggplot2tibbledplyrAll the data sets used in this post can be found here and code can be downloaded from here.</description>
    </item>
    
    <item>
      <title>Introduction to ggplot2</title>
      <link>/post/introduction-to-ggplot2/</link>
      <pubDate>Thu, 07 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-ggplot2/</guid>
      <description>IntroductionThis is the first post in the series Elegant Data Visualization with ggplot2. In this post, we will:
understand the philosophy of Grammar of Graphicsexplore different aspects of ggplot2learn to build some of the basic plots regularly used for exploring dataggplot2 is an awesome alternative to base R for data visualization. It is based on The Grammar of Graphics. In this post, we will understand the philosophy behind ggplot2 and learn to build some of the most frequently used plots for visualizing data.</description>
    </item>
    
  </channel>
</rss>