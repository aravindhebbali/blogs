<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Purrr on Rsquared Academy Blog</title>
    <link>/tags/purrr/</link>
    <description>Recent content in Purrr on Rsquared Academy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2014-2017. All rights reserved.</copyright>
    <lastBuildDate>Fri, 23 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/purrr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why you should purrr - Part 2</title>
      <link>/post/why-you-should-purrr-part-2/</link>
      <pubDate>Fri, 23 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/why-you-should-purrr-part-2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Why you should purrr?</title>
      <link>/post/why-you-should-purrr-part-1/</link>
      <pubDate>Fri, 23 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/why-you-should-purrr-part-1/</guid>
      <description>This is the 10th post in the series Data Wrangling with R. In the previous post, we learnt helper functions in dplyr package. In this post, we will learn about purrr, an R package that enhances Râ€™s functional programming toolkit. Let us begin by installing and loading purrr and a set of other pacakges we will be using.
As we did in the earlier posts in this series, we will use a case study to explore the various features of the stringr package.</description>
    </item>
    
  </channel>
</rss>